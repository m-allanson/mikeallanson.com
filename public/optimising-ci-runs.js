import{mdx as e}from"@mdx-js/preactmdx-js/preact.js";const l={title:"Optimising CI Runs",slug:"/optimising-ci-runs",date:"2021-08-03"},t="wrapper";function n({components:o,...a}){return e(t,Object.assign({components:o},a),e("h1",{id:"optimising-ci-runs",is:"postHeading"},"Optimising CI Runs"),e("p",null,"I spent some time optimising the CI runs for a recent project."),e("p",null,"In this case there were two dimensions to optimise against:"),e("ul",null,e("li",{parentName:"ul"},"total CI minutes used (each month)"),e("li",{parentName:"ul"},"duration of each CI run")),e("p",null,"Usually improvements to one dimension improve the other. But sometimes they'd conflict."),e("h2",{id:"unparallelise-jobs",is:"postHeading"},e("a",{href:"#unparallelise-jobs",parentName:"h2"},"Unparallelise jobs")),e("p",null,"In this case, slightly increasing each run duration led to a big reduction in total CI minutes used."),e("p",null,"The setup was a number of jobs running in parallel:"),e("codeblock",{codestring:"- shortJobA\\n- shortJobB\\n- shortJobC\\n- longJob"},e("pre",{className:"prism-code language-undefined",style:{color:"#d6deeb",backgroundColor:"transparent"},parentName:"codeblock"},e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- shortJobA")),e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- shortJobB")),e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- shortJobC")),e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- longJob")))),e("p",null,e("inlineCode",{parentName:"p"},"longJob")," would always run, even if all of the ",e("inlineCode",{parentName:"p"},"shortJob"),"s failed. Changing the run ordering to:"),e("codeblock",{codestring:"- shortJobA --|\\n- shortJobB --|--> longJob\\n- shortJobC --|"},e("pre",{className:"prism-code language-undefined",style:{color:"#d6deeb",backgroundColor:"transparent"},parentName:"codeblock"},e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- shortJobA --|")),e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- shortJobB --|--> longJob")),e("div",{className:"token-line",style:{color:"#d6deeb"},parentName:"pre"},e("span",{className:"token plain",parentName:"div"},"- shortJobC --|")))),e("p",null,"Meant that ",e("inlineCode",{parentName:"p"},"longJob")," would only run after all the ",e("inlineCode",{parentName:"p"},"shortJob"),"s passed. This made individual CI runs take slightly longer, but massively reduced the overall number of CI minutes used."),e("h2",{id:"other-optimisations",is:"postHeading"},e("a",{href:"#other-optimisations",parentName:"h2"},"Other optimisations")),e("p",null,"Other optimisations fell into the following few categories:"),e("ul",null,e("li",{parentName:"ul"},"Remove unneccessary work"),e("li",{parentName:"ul"},"Optimise slow work"),e("li",{parentName:"ul"},"Cache results of expensive work")),e("p",null,"Remove, reduce or re-use. I guess that's a general lesson for any code."))}n.isMDXComponent=!0;var i=n;export{i as default,l as meta};
