---
import type { CollectionEntry } from "astro:content";
type Props = CollectionEntry<"notes">["data"];

import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const notes = (await getCollection("notes")).sort(
    (a, b) => a.data.date.valueOf() - b.data.date.valueOf()
  );

  return notes.map((note, i) => {
    const nextLink = notes[i + 1] && {
      href: `/notes/${notes[i + 1].slug}/`,
      title: notes[i + 1].data.title,
    };
    const prevLink = notes[i - 1] && {
      href: `/notes/${notes[i - 1].slug}/`,
      title: notes[i - 1].data.title,
    };
    return {
      params: { slug: note.slug },
      props: { note, nextLink, prevLink },
    };
  });
}

const { note, nextLink, prevLink } = Astro.props;
const { Content } = await note.render();
---

<BaseLayout title={note.data.title}>
  <article class="flow prose">
    <h1>{note.data.title}</h1>
    <FormattedDate date={note.data.date} />
    <Content />
  </article>
  {
    (nextLink || prevLink) && (
      <>
        <div class="region" style="--region-space: var(--space-m-l)">
          <hr class="hr" />
        </div>
        <ul role="list" style="margin: 0">
          {nextLink && (
            <li>
              Next: <a href={nextLink.href}>{nextLink.title}</a>
            </li>
          )}
          {prevLink && (
            <li>
              Previous: <a href={prevLink.href}>{prevLink.title}</a>
            </li>
          )}
        </ul>
      </>
    )
  }
</BaseLayout>
